name: Auto-Release on Version Change

on:
  push:
    branches:
      - master
    paths:
      - 'package.json'

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check for version change
      id: version_check
      run: |
        # Get current and previous version
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync(0, 'utf8')).version")

        echo "Current version: $CURRENT_VERSION"
        echo "Previous version: $PREVIOUS_VERSION"

        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "‚úÖ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è No version change detected"
        fi

    - name: Setup Node.js
      if: steps.version_check.outputs.version_changed == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      if: steps.version_check.outputs.version_changed == 'true'
      run: npm ci

    - name: Build project
      if: steps.version_check.outputs.version_changed == 'true'
      run: npm run build

    - name: Create git tag
      if: steps.version_check.outputs.version_changed == 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a "v${{ steps.version_check.outputs.new_version }}" -m "Release v${{ steps.version_check.outputs.new_version }}"
        git push origin "v${{ steps.version_check.outputs.new_version }}"

    - name: Publish to npm
      if: steps.version_check.outputs.version_changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Extract release notes
      if: steps.version_check.outputs.version_changed == 'true'
      id: release_notes
      run: |
        # Try to extract release notes from commit message
        COMMIT_MSG=$(git log -1 --pretty=%B)
        echo "commit_message<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      if: steps.version_check.outputs.version_changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version_check.outputs.new_version }}
        release_name: Release v${{ steps.version_check.outputs.new_version }}
        body: |
          ## üöÄ Mind Map MCP v${{ steps.version_check.outputs.new_version }}

          ${{ steps.release_notes.outputs.commit_message }}

          ### Installation
          ```bash
          npm install -g mind-map-mcp@${{ steps.version_check.outputs.new_version }}
          ```

          ### Quick Setup
          ```bash
          npx mind-map-mcp init-claude-code
          ```

          ### What's Changed
          See [TASKS.md](https://github.com/nerfels/mind-map/blob/master/TASKS.md) and [README.md](https://github.com/nerfels/mind-map/blob/master/README.md) for details.

          ---
          ü§ñ *This release was automatically published by GitHub Actions*
        draft: false
        prerelease: false

    - name: Post release notification
      if: steps.version_check.outputs.version_changed == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const version = '${{ steps.version_check.outputs.new_version }}';
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: 1, // Assuming you have an issue #1 for announcements
            body: `üéâ **v${version} has been released!**\n\n` +
                  `- üì¶ npm: https://www.npmjs.com/package/mind-map-mcp/v/${version}\n` +
                  `- üè∑Ô∏è GitHub: https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/v${version}\n\n` +
                  `Install: \`npm install -g mind-map-mcp@${version}\``
          }).catch(() => {
            console.log('No issue #1 found for announcement, skipping notification');
          });